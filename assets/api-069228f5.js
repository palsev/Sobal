var Y=Object.defineProperty;var K=(a,e,t)=>e in a?Y(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var s=(a,e,t)=>(K(a,typeof e!="symbol"?e+"":e,t),t);import{B as J,l as $,V as j,i as N,p as Z,b as V,k as E,m as X,d as h,a as ee,c as te,e as ne,M as ae}from"./index-c7e2fe85.js";import{bz as ie,aO as I,aP as A,bC as se,bD as re,bE as pe,aQ as U,b6 as q,aS as T,bF as ue,b4 as oe,a_ as ye}from"./BalBtn-a3a093af.js";import{c as d,S as p,ah as le,a1 as de,Z as b,a8 as W,$ as ce,o as C,n as me}from"./connector-d867b6ec.js";import{c as k}from"./errors-e4e66976.js";import{r as z,q as Te}from"./runtime-core.esm-bundler-24a2b16f.js";import{r as w,f as P,g as B}from"./tailwind.config-93ced0cc.js";function x(a){w(1,arguments);var e=P(a);return e.setHours(0,0,0,0),e}var be=864e5;function fe(a,e){w(2,arguments);var t=x(a),n=x(e),i=t.getTime()-B(t),r=n.getTime()-B(n);return Math.round((i-r)/be)}function F(a,e){var t=a.getFullYear()-e.getFullYear()||a.getMonth()-e.getMonth()||a.getDate()-e.getDate()||a.getHours()-e.getHours()||a.getMinutes()-e.getMinutes()||a.getSeconds()-e.getSeconds()||a.getMilliseconds()-e.getMilliseconds();return t<0?-1:t>0?1:t}function he(a,e){w(2,arguments);var t=P(a),n=P(e),i=F(t,n),r=Math.abs(fe(t,n));t.setDate(t.getDate()-i*r);var o=Number(F(t,n)===-i),l=i*(r-o);return l===0?0:l}var L={ceil:Math.ceil,round:Math.round,floor:Math.floor,trunc:function(e){return e<0?Math.ceil(e):Math.floor(e)}},we="trunc";function ge(a){return a?L[a]:L[we]}function ve(a,e,t){w(2,arguments);var n=he(a,e)/7;return ge(t==null?void 0:t.roundingMethod)(n)}let _=J;function xt(){return _||ie("PoolsFallbackRepository"),_}class Se{constructor(e=d){s(this,"url");this.configService=e,this.url=e.network.subgraphs.blocks}async get(e){try{const t=this.toPayload(e),{data:{data:n}}=await I.post(this.url,t);return n}catch(t){console.error(t)}}toPayload(e){return JSON.stringify({query:$.jsonToGraphQLQuery({query:e})})}}const Me=new Se,ke={first:1,orderBy:"timestamp",orderDirection:"asc"},Pe={number:!0},Ie=(a={},e={})=>({blocks:{__args:p.merge({},ke,a),...p.merge({},Pe,e)}});class Ae{constructor(e,t=Ie){s(this,"service");s(this,"query");this.service=e,this.query=t}async get(e={},t={}){const n=this.query(e,t);return await this.service.client.get(n)}}class Re{constructor(e=Me,t=A){s(this,"blockNumber");this.client=e,this.rpcProviderService=t,this.blockNumber=new Ae(this)}}const De=new Re;class Ee{constructor(e=De,t=A,n=d){this.subgraphService=e,this.rpc=t,this.config=n}async fetchBlockByTime(e,t=!0){return le.value||de.value?this.fetchBlockByApprox(e):this.fetchBlockByTimeWithGraph(e,t)}async fetchBlockByApprox(e){const t=re(Number(e)),n=await this.rpc.getBlockNumber(),i=Math.floor(t/this.config.network.blockTime);return n-i}async fetchBlockByTimeWithGraph(e,t=!0){try{let n={};if(t){const r=b(e).plus(se);n={where:{timestamp_gt:e,timestamp_lt:r.toString()}}}else n={where:{timestamp_gt:e}};const i=await this.subgraphService.blockNumber.get(n);return parseInt(i.blocks[0].number)}catch(n){if(t)return this.fetchBlockByTime(e,!1);throw n}}}const O=new Ee;async function qe(a="24h"){const e=`${Math.floor(Date.now()/1e3)-pe}`;switch(a){case"24h":return O.fetchBlockByTime(e);default:return O.fetchBlockByTime(e)}}const Ce="https://gateway.thegraph.com";class Be{constructor(e=d.subgraphUrls||[]){s(this,"urlIndex",z(0));s(this,"url",Te(()=>this.urls[this.urlIndex.value]));this.urls=e}async get(e){var t;if(!e)throw new Error("Payload is required");try{const n=await I.post(this.url.value,e),i=(t=n==null?void 0:n.data.errors)==null?void 0:t.message;if(i)throw new Error(i);return n}catch(n){if(this.url.value.startsWith(Ce)&&k({error:n,msgPrefix:`GraphQL request to [${this.url.value}] failed with message: ${n==null?void 0:n.message}`,context:{extra:{Payload:`${JSON.stringify(e)}`}}}),this.urlIndex.value+1===this.urls.length)throw n;return this.incrementUrlIndex(),this.get(e)}}incrementUrlIndex(){this.urlIndex.value+=1}}const xe=new Be;class Fe{async get(e){try{const t=this.toPayload(e),n=await xe.get(t);return n?n.data.data:void 0}catch(t){console.error(t)}}toPayload(e){return{query:$.jsonToGraphQLQuery({query:e})}}}const Le=new Fe,_e={first:100,orderBy:"timestamp",orderDirection:"desc"},Oe={amounts:!0,timestamp:!0,tx:!0,type:!0},$e=(a={},e={})=>({joinExits:{__args:p.merge({},_e,a),...p.merge({},Oe,e)}});class Ne{constructor(e,t=$e){s(this,"service");s(this,"query");this.service=e,this.query=t}async get(e={},t={}){const n=this.query(e,t),{joinExits:i}=await this.service.client.get(n);return this.serializeActivity(i)}serializeActivity(e){return e.map(t=>({...t,timestamp:t.timestamp*1e3}))}}const Ve={first:1e3,orderBy:"totalLiquidity",orderDirection:"desc",where:{totalShares:{gt:1e-5},id:{not_in:W.BlockList}}},g={address:!0,balance:!0,weight:!0,priceRate:!0,symbol:!0,decimals:!0},v={id:!0,totalShares:!0,address:!0,poolType:!0,mainIndex:!0},Ue={...g,token:{latestUSDPrice:!0,pool:{...v,tokens:{...g,token:{latestUSDPrice:!0,pool:{...v,tokens:{...g,token:{latestUSDPrice:!0,pool:{...v}}}}}}}}},We={address:!0,token:{address:!0}},ze={id:!0,address:!0,poolType:!0,swapFee:!0,tokensList:!0,totalLiquidity:!0,totalSwapVolume:!0,totalSwapFee:!0,totalShares:!0,owner:!0,factory:!0,amp:!0,createTime:!0,swapEnabled:!0,symbol:!0,name:!0,protocolYieldFeeCache:!0,priceRateProviders:We,tokens:Ue,poolTypeVersion:!0,isInRecoveryMode:!0,isPaused:!0},Qe=(a={},e={})=>({args:p.merge({},Ve,a),attrs:p.merge({},ze,e)});let He=class{constructor(e,t=Qe){s(this,"service");s(this,"queryBuilder");s(this,"lastQuery");s(this,"repository");this.service=e,this.queryBuilder=t}async get(e={},t={}){const n=this.queryBuilder(e,t);return(!this.repository||!p.isEqual(n,this.lastQuery))&&(this.lastQuery=p.cloneDeep(n),this.repository=new j({url:d.network.subgraph,chainId:d.network.chainId,query:n})),await this.repository.fetch({first:n.args.first,skip:n.args.skip})}get skip(){return this.repository?this.repository.skip:0}};const Ge={first:1e3,where:{balance_gt:1e-6}},Ye={poolId:{id:!0},balance:!0},Ke=(a={},e={},t=void 0)=>({__name:t,poolShares:{__args:p.merge({},Ge,a),...p.merge({},Ye,e)}});class Je{constructor(e,t=Ke){s(this,"service");s(this,"query");this.service=e,this.query=t}async get(e={},t={}){const n="PoolShares",i=this.query(e,t,n);return(await this.service.client.get(i)).poolShares}}const je={first:1e3},Q={pool:{id:!0},liquidity:!0,timestamp:!0,amounts:!0,totalShares:!0,swapVolume:!0,swapFees:!0};ce.value||(Q.liquidity=!0);const Ze=(a={},e={})=>({poolSnapshots:{__args:p.merge({},je,a),...p.merge({},Q,e)}});class Xe{constructor(e,t=Ze){s(this,"service");s(this,"query");this.service=e,this.query=t}async get(e={},t={}){const n=this.query(e,t),i=await this.service.client.get(n);return this.serialize(i.poolSnapshots)}serialize(e){return e.reverse().reduce((t,n)=>{const i=U(n.timestamp);return t[i]={...n,timestamp:i},t},{})}}const et={first:100,orderBy:"timestamp",orderDirection:"desc"},tt={tokenIn:!0,tokenOut:!0,tokenAmountIn:!0,tokenAmountOut:!0,tx:!0,timestamp:!0,userAddress:{id:!0}},nt=(a={},e={})=>({swaps:{__args:p.merge({},et,a),...p.merge({},tt,e)}});class at{constructor(e,t=nt){s(this,"service");s(this,"query");this.service=e,this.query=t}async get(e={},t={}){const n=this.query(e,t),{swaps:i}=await this.service.client.get(n);return await this.serialize(i)}async swaprDecoration(e){const t=e.map(r=>r.userAddress.id),n=await q.getEnsName(t)??[],i=await Promise.all(n.map(async r=>{let o=null;return r&&(o=await q.getEnsAvatar(r)),{ensName:r,ensAvatar:o}}));return e.map((r,o)=>({...r,ensName:i[o].ensName,ensAvatar:i[o].ensAvatar}))}async serialize(e){return(await this.swaprDecoration(e)).map(n=>({...n,tokenIn:C(n.tokenIn),tokenOut:C(n.tokenOut),timestamp:U(n.timestamp)}))}}const it={first:1e3,where:{totalSwapVolume_gt:0}},st={totalSwapFee:!0,totalSwapVolume:!0,pair:{token0:{address:!0,symbol:!0},token1:{address:!0,symbol:!0}}},rt=(a={},e={})=>({tradePairSnapshots:{__args:p.merge({},it,a),...p.merge({},st,e)}});class pt{constructor(e,t=rt){s(this,"service");s(this,"query");this.service=e,this.query=t}async get(e={},t={}){const n=this.query(e,t);return(await this.service.client.get(n)).tradePairSnapshots}}class ut{constructor(e=Le,t=A){s(this,"pools");s(this,"poolShares");s(this,"poolActivities");s(this,"poolSwaps");s(this,"poolSnapshots");s(this,"tradePairSnapshots");this.client=e,this.rpcProviderService=t,this.pools=new He(this),this.poolShares=new Je(this),this.poolActivities=new Ne(this),this.poolSwaps=new at(this),this.poolSnapshots=new Xe(this),this.tradePairSnapshots=new pt(this)}}const ot=new ut;class yt{constructor(e,t,n){this.pool=e,this.rawData=t,this.tokenMeta=n}format(){var t;const e={};return e.tokens=this.formatPoolTokens(),e.amp="0",(t=this.rawData)!=null&&t.amp&&(e.amp=this.rawData.amp.value.div(this.rawData.amp.precision).toString()),e.swapEnabled=!0,this.rawData.swapEnabled!==void 0&&(e.swapEnabled=this.rawData.swapEnabled),this.rawData.tokenRates&&(e.tokenRates=this.rawData.tokenRates.map(n=>T(n.toString(),18))),e.totalSupply=T(this.rawData.totalSupply,this.rawData.decimals),e.decimals=this.rawData.decimals,e.swapFee=T(this.rawData.swapFee,18),e}formatPoolTokens(){const e={},t=this.normalizeWeights();return this.rawData.poolTokens.tokens.forEach((n,i)=>{var l,y,u,c;const r=this.rawData.poolTokens.balances[i],o=(l=this.tokenMeta[n])==null?void 0:l.decimals;e[n.toLowerCase()]={decimals:o,balance:T(r,o),weight:t[i],symbol:(y=this.tokenMeta[n])==null?void 0:y.symbol,name:(u=this.tokenMeta[n])==null?void 0:u.name,logoURI:(c=this.tokenMeta[n])==null?void 0:c.logoURI}}),delete e[this.pool.address.toLowerCase()],e}normalizeWeights(){if(N(this.pool.poolType))return Z(this.rawData.weights||[]).map(e=>Number(T(e,18)));if(V(this.pool.poolType)){const e=this.pool.tokensList.map(()=>1/this.pool.tokensList.length);return this.rawData.poolTokens.tokens.map(()=>e[0])}else return[]}}class lt{constructor(e){this.pool=e,this.format()}format(){return this.pool.isNew=this.isNew,this.pool.chainId=me.value,this.formatPoolTokens(),this.pool}get bptPrice(){return b(this.pool.totalLiquidity).div(this.pool.totalShares).toString()}async setTotalLiquidity(){let e=this.pool.totalLiquidity;try{const t=await E().pools.liquidity(this.pool);b(e).gt(0)&&(e=t)}catch(t){k({error:t}),console.error(`Failed to calc liquidity for: ${this.pool.id}`,t)}return this.pool.totalLiquidity=e}async setAPR(){let e=this.pool.apr;try{const t=await E().pools.apr(this.pool);t&&(e=t)}catch(t){k({error:t}),console.error(`Failed to calc APR for: ${this.pool.id}`,t)}return this.pool.apr=e}formatPoolTokens(){return X(this.pool.poolType)?this.pool.tokens:this.pool.tokens=this.pool.tokens.sort((e,t)=>parseFloat(t.weight||"0")-parseFloat(e.weight||"0"))}setFeesSnapshot(e){let t="0";e&&(t=e.totalSwapFee||"0");const n=b(this.pool.totalSwapFee||0).minus(t).toString();return this.pool.feesSnapshot=n}setVolumeSnapshot(e){let t="0";e&&(t=e.totalSwapVolume||"0");const n=b(this.pool.totalSwapVolume||0).minus(t).toString();return this.pool.volumeSnapshot=n}setOnchainData(e,t){try{const n=new yt(this.pool,e,t);return this.pool.isInRecoveryMode=e.isInRecoveryMode,this.pool.isPaused=e.isPaused,this.pool.onchain=n.format()}catch(n){console.warn(n)}}get isNew(){return this.pool.createTime?ve(Date.now(),this.pool.createTime*ue)<1:!1}}const dt=[{inputs:[],name:"asset",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"}],ct=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],mt=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256[]",name:"tokenRateCacheDurations",type:"uint256[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct StablePhantomPool.NewPoolParams",name:"params",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"}],name:"CachedProtocolSwapFeePercentageUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"bptAmount",type:"uint256"}],name:"DueProtocolFeeIncreased",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"rate",type:"uint256"}],name:"TokenRateCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!0,internalType:"contract IRateProvider",name:"provider",type:"address"},{indexed:!1,internalType:"uint256",name:"cacheDuration",type:"uint256"}],name:"TokenRateProviderSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCachedProtocolSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDueProtocolFeeBptAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastInvariant",outputs:[{internalType:"uint256",name:"lastInvariant",type:"uint256"},{internalType:"uint256",name:"lastInvariantAmp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinimumBpt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRateProviders",outputs:[{internalType:"contract IRateProvider[]",name:"providers",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getScalingFactor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRateCache",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"expires",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"",type:"tuple"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"duration",type:"uint256"}],name:"setTokenRateCacheDuration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateCachedProtocolSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"updateTokenRateCache",outputs:[],stateMutability:"nonpayable",type:"function"}],Tt=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!1,internalType:"address",name:"aToken",type:"address"},{indexed:!1,internalType:"string",name:"staticATokenName",type:"string"},{indexed:!1,internalType:"string",name:"staticATokenSymbol",type:"string"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"ASSET",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"ATOKEN",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"EIP712_REVISION",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"INCENTIVES_CONTROLLER",outputs:[{internalType:"contract IAaveIncentivesController",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"LENDING_POOL",outputs:[{internalType:"contract ILendingPool",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"METADEPOSIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"METAWITHDRAWAL_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"REWARD_TOKEN",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"STATIC_ATOKEN_LM_REVISION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"UNDERLYING_ASSET_ADDRESS",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"bool",name:"forceUpdate",type:"bool"}],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"onBehalfOf",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"bool",name:"forceUpdate",type:"bool"}],name:"claimRewardsOnBehalf",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"forceUpdate",type:"bool"}],name:"claimRewardsToSelf",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"collectAndUpdateRewards",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint16",name:"referralCode",type:"uint16"},{internalType:"bool",name:"fromUnderlying",type:"bool"}],name:"deposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"dynamicBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"dynamicToStaticAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAccRewardsPerToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getIncentivesController",outputs:[{internalType:"contract IAaveIncentivesController",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastRewardBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLifetimeRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLifetimeRewardsClaimed",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getUnclaimedRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract ILendingPool",name:"pool",type:"address"},{internalType:"address",name:"aToken",type:"address"},{internalType:"string",name:"staticATokenName",type:"string"},{internalType:"string",name:"staticATokenSymbol",type:"string"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"depositor",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint16",name:"referralCode",type:"uint16"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"deadline",type:"uint256"},{components:[{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IStaticATokenLM.SignatureParams",name:"sigParams",type:"tuple"}],name:"metaDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"staticAmount",type:"uint256"},{internalType:"uint256",name:"dynamicAmount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"deadline",type:"uint256"},{components:[{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IStaticATokenLM.SignatureParams",name:"sigParams",type:"tuple"}],name:"metaWithdraw",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"rate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"staticToDynamicAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"}],name:"withdraw",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"}],name:"withdrawDynamicAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"}],m=Object.values(Object.fromEntries([...h.WeightedPool__factory.abi,...h.StablePool__factory.abi,...h.InvestmentPool__factory.abi,...mt,...ct,...Tt,...oe,...dt].map(a=>[a.name,a])));class bt{constructor(e,t=ye(),n=d.network.addresses.vault){this.pools=e,this.MulticallerClass=t,this.vaultAddress=n}async fetch(){const e={},t=new this.MulticallerClass;return this.pools.forEach(n=>{t.call({key:`${n.id}.totalSupply`,address:n.address,function:"totalSupply",abi:m}).call({key:`${n.id}.decimals`,address:n.address,function:"decimals",abi:m}).call({key:`${n.id}.swapFee`,address:n.address,function:"getSwapFeePercentage",abi:m}).call({key:`${n.id}.isInRecoveryMode`,address:n.address,function:"inRecoveryMode",abi:["function inRecoveryMode() view returns (bool)"]}).call({key:`${n.id}.isPaused`,address:n.address,function:"getPausedState",abi:["function getPausedState() view returns (bool)"]}).call({key:`${n.id}.poolTokens`,address:this.vaultAddress,function:"getPoolTokens",abi:h.Vault__factory.abi,params:[n.id]}),N(n.poolType)?(t.call({key:`${n.id}.weights`,address:n.address,function:"getNormalizedWeights",abi:m}),ee(n.poolType)&&t.call({key:`${n.id}.swapEnabled`,address:n.address,function:"getSwapEnabled",abi:m})):V(n.poolType)&&(t.call({key:`${n.id}.amp`,address:n.address,function:"getAmplificationParameter",abi:m}),te(n.poolType)&&(t.call({key:`${n.id}.totalSupply`,address:n.address,function:"getVirtualSupply",abi:m}),ne(n.poolType)&&t.call({key:`${n.id}.totalSupply`,address:n.address,function:"getActualSupply",abi:m})))}),await t.execute(e)}}class Lt{constructor(e,t=lt,n=ot){this.pools=e,this.poolServiceClass=t,this.poolSubgraph=n}async decorate(e,t=!0){const n=this.pools.map(y=>new this.poolServiceClass(y).pool),i=new bt(n),[r,o]=await Promise.all([t?this.getSnapshots():[],i.fetch()]),l=n.map(async y=>{const u=new this.poolServiceClass(y);if(u.setOnchainData(o[y.id],e),t){const c=r.find(f=>f.id===y.id);u.setFeesSnapshot(c),u.setVolumeSnapshot(c),await u.setTotalLiquidity(),await u.setAPR()}return u.pool});return await Promise.all(l)}async reCalculateTotalLiquidities(){return Promise.all(this.pools.map(async e=>{const t=new this.poolServiceClass(e);return await t.setTotalLiquidity(),t.pool}))}async getSnapshots(){const t={number:await qe()},n={id:{in:this.pools.map(i=>i.id)}};try{return await this.poolSubgraph.pools.get({where:n,block:t})}catch(i){return console.error("Failed to fetch pool snapshots",i),[]}}}const ft={first:1e3,orderBy:"totalLiquidity",orderDirection:"desc",where:{totalShares:{gt:1e-5},id:{not_in:W.BlockList}}},S={address:!0,balance:!0,weight:!0,priceRate:!0,symbol:!0,decimals:!0},M={id:!0,totalShares:!0,address:!0,poolType:!0,mainIndex:!0},ht={...S,token:{latestUSDPrice:!0,pool:{...M,tokens:{...S,token:{latestUSDPrice:!0,pool:{...M,tokens:{...S,token:{latestUSDPrice:!0,pool:{...M}}}}}}}}},wt={address:!0,token:{address:!0}},H={pools:{id:!0,address:!0,poolType:!0,poolTypeVersion:!0,swapFee:!0,tokensList:!0,totalLiquidity:!0,totalSwapVolume:!0,totalSwapFee:!0,totalShares:!0,volumeSnapshot:!0,feesSnapshot:!0,owner:!0,factory:!0,amp:!0,createTime:!0,swapEnabled:!0,symbol:!0,name:!0,protocolYieldFeeCache:!0,priceRateProviders:wt,tokens:ht,isNew:!0,isInRecoveryMode:!0,isPaused:!0,apr:{stakingApr:{min:!0,max:!0},swapFees:!0,tokenAprs:{total:!0,breakdown:!0},rewardAprs:{total:!0,breakdown:!0},protocolApr:!0,min:!0,max:!0}}},gt=(a={},e={})=>({args:p.merge({},ft,a),attrs:p.merge({},H,e)}),vt={where:{}},St=(a={},e={})=>({args:p.merge({},vt,a),attrs:p.merge({},H,e)});class Mt{constructor(e,t=St){s(this,"service");s(this,"queryBuilder");s(this,"lastQuery");this.service=e,this.queryBuilder=t}async get(e={},t={}){var y,u;const n=this.queryBuilder(e,t);if(!n.args.chainId)throw new Error("Invalid query - missing chainId");if(!((u=(y=n.args.where)==null?void 0:y.id)!=null&&u.eq))throw new Error("Invalid query - missing pool id");const i=n.args.chainId,r=n.args.where.id.eq,o=`${d.network.balancerApi}/pools/${i}/${r}`,{data:l}=await I.get(o);return l}}class kt{constructor(e,t=gt){s(this,"service");s(this,"queryBuilder");s(this,"lastQuery");s(this,"repository");this.service=e,this.queryBuilder=t}async get(e={},t={}){var l,y,u,c,f,R,D;const n=this.queryBuilder(e,t),i=n.args.skip,r=n.args.first;if(delete n.args.skip,delete n.args.first,(y=(l=n.args.where)==null?void 0:l.id)!=null&&y.in){if(((c=(u=n.args.where)==null?void 0:u.id)==null?void 0:c.in.length)===0)return[];(R=(f=n.args.where)==null?void 0:f.id)!=null&&R.not_in&&((D=n.args.where)==null||delete D.id.not_in)}if(!this.repository||!p.isEqual(n,this.lastQuery)){this.lastQuery=p.cloneDeep(n);const G=`${d.network.balancerApi}/graphql`;this.repository=new ae({url:G,apiKey:d.network.keys.balancerApi||"",query:n})}return await this.repository.fetch({first:r,skip:i})}get skip(){return this.repository?this.repository.skip:0}}class Pt{constructor(){s(this,"pool");s(this,"pools");this.pool=new Mt(this),this.pools=new kt(this)}}const _t=new Pt;class It{constructor(){s(this,"pools",z(null))}setPools(e){this.pools.value=e}addPools(e){this.pools.value=[...this.pools.value??[],...e]}findPool(e){var t;return(t=this.pools.value)==null?void 0:t.find(n=>n.id===e)}}const Ot=new It,$t=!!d.network.balancerApi;export{dt as I,ct as L,Lt as P,mt as S,Tt as a,ot as b,_t as c,ge as d,he as e,xt as g,$t as i,Ot as p,xe as s};
//# sourceMappingURL=api-069228f5.js.map
