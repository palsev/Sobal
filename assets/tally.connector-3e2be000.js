var i=Object.defineProperty;var s=(o,t,e)=>t in o?i(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var r=(o,t,e)=>(s(o,typeof t!="symbol"?t+"":t,e),e);import{af as l,ag as d}from"./connector-d867b6ec.js";import"./runtime-core.esm-bundler-24a2b16f.js";import"./_commonjsHelpers-87174ba5.js";import"./pools-b19f9d28.js";class p extends l{constructor(){super(...arguments);r(this,"id",d.InjectedTally)}async connect(){const e=window.ethereum||window.web3&&window.web3.currentProvider;if(e){this.provider=e,this.active.value=!0;let a=null,c=null;try{e.request&&(a=await e.request({method:"eth_requestAccounts"}),c=await e.request({method:"eth_chainId"}))}catch(n){n.code===4001?console.log("Please connect to MetaMask."):console.error(n)}if(!a){const n=await e.enable();a=(n==null?void 0:n.result)||n}a&&c&&(this.handleChainChanged(c),this.handleAccountsChanged(a))}else console.error("Tried to connect to MetaMask but it was not detected. Please install MetaMask.");return{provider:e,account:this.account,chainId:this.chainId}}}export{p as TallyConnector};
//# sourceMappingURL=tally.connector-3e2be000.js.map
