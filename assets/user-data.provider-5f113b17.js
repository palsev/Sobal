var G=Object.defineProperty;var H=(p,e,t)=>e in p?G(p,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):p[e]=t;var b=(p,e,t)=>(H(p,typeof e!="symbol"?e+"":e,t),t);import{aq as k,aY as A,aZ as I,a_ as J,aS as d,a$ as O,b0 as _,b1 as Y,aQ as Z,b2 as h,b3 as E,aP as P,b4 as X,b5 as D,b6 as j,aJ as ee,aV as te,aW as ne}from"./BalBtn-a3a093af.js";import{a2 as ae,o as m,U as se,S as M,c as v,n as U,N as W,Z as g,a3 as ie,u as pe}from"./connector-d867b6ec.js";import{v as f,q as w,ah as ue}from"./runtime-core.esm-bundler-24a2b16f.js";import{d as S,i as R,a as re,b as C,c as oe,e as le,f as F,p as ye,g as de,l as ce}from"./index-c7e2fe85.js";import{S as me,L as be,a as fe,I as ge,b as we}from"./api-069228f5.js";import{i as ve}from"./useVeBAL-c380e517.js";function q(p,e){console.trace(p,{cause:e})}function Te(p,e={}){const{account:t,isWalletReady:n}=k(),s=f(A.User.Pool.StakedShares(p,t)),a=w(()=>!!p.value&&n.value),i=async()=>{try{if(!p.value)return{};let l={};const u=J(),r=new u;p.value.forEach(c=>{r.call({key:`${c.gauge.poolId}.${c.gauge.id}`,address:c.gauge.id,function:"balanceOf",abi:["function balanceOf(address) returns (uint256)"],params:[t.value]})}),l=await r.execute();const y={};for(const c in l){const x=l[c],$=Object.values(x).map(K=>d(K)),Q=ae($).toString();y[c]=Q}return y}catch(l){throw q("Failed to fetch staked share balance",l),Error}},o=f({enabled:a,refetchOnWindowFocus:!1,...e});return I(s,i,o)}const he=[{inputs:[{internalType:"contract IAuthorizer",name:"authorizer",type:"address"},{internalType:"contract IWETH",name:"weth",type:"address"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IAuthorizer",name:"newAuthorizer",type:"address"}],name:"AuthorizerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ExternalBalanceTransfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IFlashLoanRecipient",name:"recipient",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"feeAmount",type:"uint256"}],name:"FlashLoan",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"int256",name:"delta",type:"int256"}],name:"InternalBalanceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"liquidityProvider",type:"address"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"int256[]",name:"deltas",type:"int256[]"},{indexed:!1,internalType:"uint256[]",name:"protocolFeeAmounts",type:"uint256[]"}],name:"PoolBalanceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"assetManager",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"int256",name:"cashDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"managedDelta",type:"int256"}],name:"PoolBalanceManaged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"enum IVault.PoolSpecialization",name:"specialization",type:"uint8"}],name:"PoolRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"relayer",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"RelayerApprovalChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"contract IERC20",name:"tokenIn",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"tokenOut",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"Swap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"TokensDeregistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"address[]",name:"assetManagers",type:"address[]"}],name:"TokensRegistered",type:"event"},{inputs:[],name:"WETH",outputs:[{internalType:"contract IWETH",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"assetDeltas",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"deregisterTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"exitPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IFlashLoanRecipient",name:"recipient",type:"address"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"flashLoan",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"getInternalBalance",outputs:[{internalType:"uint256[]",name:"balances",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"}],name:"getPool",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"enum IVault.PoolSpecialization",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20",name:"token",type:"address"}],name:"getPoolTokenInfo",outputs:[{internalType:"uint256",name:"cash",type:"uint256"},{internalType:"uint256",name:"managed",type:"uint256"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"assetManager",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"}],name:"getPoolTokens",outputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract ProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"relayer",type:"address"}],name:"hasApprovedRelayer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.PoolBalanceOpKind",name:"kind",type:"uint8"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct IVault.PoolBalanceOp[]",name:"ops",type:"tuple[]"}],name:"managePoolBalance",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"}],name:"queryBatchSwap",outputs:[{internalType:"int256[]",name:"",type:"int256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum IVault.PoolSpecialization",name:"specialization",type:"uint8"}],name:"registerPool",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"address[]",name:"assetManagers",type:"address[]"}],name:"registerTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IAuthorizer",name:"newAuthorizer",type:"address"}],name:"setAuthorizer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setRelayerApproval",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"amountCalculated",type:"uint256"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}],_e=[{inputs:[{internalType:"contract IVault",name:"_vault",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newFlashLoanFeePercentage",type:"uint256"}],name:"FlashLoanFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newSwapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"getCollectedFeeAmounts",outputs:[{internalType:"uint256[]",name:"feeAmounts",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getFlashLoanFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"newFlashLoanFeePercentage",type:"uint256"}],name:"setFlashLoanFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newSwapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"address",name:"recipient",type:"address"}],name:"withdrawCollectedFees",outputs:[],stateMutability:"nonpayable",type:"function"}];class Me{constructor(e){b(this,"address");b(this,"instance");this.vault=e}async getAddress(){return await this.vault.instance.getProtocolFeesCollector()}async getInstance(){return this.address=await this.getAddress(),new O(this.address,_e,this.vault.service.provider)}async getSwapFeePercentage(){try{this.instance=await this.getInstance();const e=await this.instance.getSwapFeePercentage();return Number(d(e,18))}catch(e){return console.error("Failed to fetch protocol fee",e),0}}}class ke{constructor(e,t=he){b(this,"service");b(this,"instance");this.service=e,this.instance=new O(this.service.config.addresses.vault,t,this.service.provider)}get protocolFeesCollector(){return new Me(this)}async getPoolData(e,t,n,s){const a=m(t.slice(0,42));let i={};const o=_(),l=new o(this.service.config.key,this.service.provider,S.Vault__factory.abi),u=new o(this.service.config.key,this.service.provider,this.service.allPoolABIs);if(u.call("totalSupply",a,"totalSupply"),u.call("decimals",a,"decimals"),u.call("swapFee",a,"getSwapFeePercentage"),R(n)?(u.call("weights",a,"getNormalizedWeights",[]),re(n)&&u.call("swapEnabled",a,"getSwapEnabled")):C(n)&&(u.call("amp",a,"getAmplificationParameter"),oe(n)&&(u.call("totalSupply",a,"getVirtualSupply"),le(n)&&u.call("totalSupply",a,"getActualSupply")),F(e)&&Object.keys(s).forEach((r,y)=>{u.call(`linearPools.${r}.id`,r,"getPoolId"),u.call(`linearPools.${r}.priceRate`,r,"getRate"),u.call(`tokenRates[${y}]`,a,"getTokenRate",[r]),u.call(`linearPools.${r}.mainToken.address`,r,"getMainToken"),u.call(`linearPools.${r}.mainToken.index`,r,"getMainIndex"),u.call(`linearPools.${r}.wrappedToken.address`,r,"getWrappedToken"),u.call(`linearPools.${r}.wrappedToken.index`,r,"getWrappedIndex"),u.call(`linearPools.${r}.wrappedToken.rate`,r,"getWrappedTokenRate")})),i=await u.execute(i),F(e)&&i.linearPools){const r={};Object.keys(i.linearPools).forEach(y=>{if(!i.linearPools)return;const c=i.linearPools[y];l.call(`linearPools.${y}.tokenData`,this.address,"getPoolTokens",[c.id]),r[y]=c.wrappedToken.address}),Object.entries(r).forEach(([y,c])=>{u.call(`linearPools.${y}.unwrappedTokenAddress`,c,"ATOKEN"),u.call(`linearPools.${y}.unwrappedERC4626Address`,c,"asset"),u.call(`linearPools.${y}.totalSupply`,y,"getVirtualSupply")}),i=await u.execute(i)}return l.call("poolTokens",this.address,"getPoolTokens",[t]),i=await l.execute(i),this.formatPoolData(i,n,s,a)}formatPoolData(e,t,n,s){const a={},i=Object.keys(n).filter(l=>!se(l,s));n=M.pick(n,i);const o=this.normalizeWeights((e==null?void 0:e.weights)||[],t,n);return a.tokens=this.formatPoolTokens(e.poolTokens,n,o,s),a.amp="0",e!=null&&e.amp&&(a.amp=e.amp.value.div(e.amp.precision).toString()),a.swapEnabled=!0,e.swapEnabled!==void 0&&(a.swapEnabled=e.swapEnabled),e!=null&&e.linearPools&&(a.linearPools=this.formatLinearPools(e.linearPools)),e.tokenRates&&(a.tokenRates=e.tokenRates.map(l=>d(l.toString(),18))),a.totalSupply=d(e.totalSupply,e.decimals),a.decimals=e.decimals,a.swapFee=d(e.swapFee,18),a}formatPoolTokens(e,t,n,s){const a={};return e.tokens.forEach((i,o)=>{var r,y,c,x;const l=e.balances[o],u=(r=t[i])==null?void 0:r.decimals;a[i.toLowerCase()]={decimals:u,balance:d(l,u),weight:n[o],symbol:(y=t[i])==null?void 0:y.symbol,name:(c=t[i])==null?void 0:c.name,logoURI:(x=t[i])==null?void 0:x.logoURI}}),delete a[s.toLowerCase()],a}formatLinearPools(e){const t={};return Object.keys(e).forEach(n=>{const{id:s,mainToken:a,wrappedToken:i,priceRate:o,unwrappedTokenAddress:l,unwrappedERC4626Address:u,tokenData:r,totalSupply:y}=e[n],c=l||u||i.address;t[n.toLowerCase()]={id:s,priceRate:d(o.toString(),18),mainToken:{address:m(a.address),index:a.index.toNumber(),balance:r.balances[a.index.toNumber()].toString()},wrappedToken:{address:m(i.address),index:i.index.toNumber(),balance:r.balances[i.index.toNumber()].toString(),priceRate:d(i.rate,18)},unwrappedTokenAddress:c,totalSupply:d(y,18)}}),t}normalizeWeights(e,t,n){if(R(t))return ye(e).map(s=>Number(d(s,18)));if(C(t)){const s=Object.values(n);return s.map(()=>1/s.length)}else return[]}get address(){return this.service.config.addresses.vault}}const T=[{name:"CommitOwnership",inputs:[{name:"admin",type:"address",indexed:!1}],anonymous:!1,type:"event"},{name:"ApplyOwnership",inputs:[{name:"admin",type:"address",indexed:!1}],anonymous:!1,type:"event"},{name:"Deposit",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1},{name:"locktime",type:"uint256",indexed:!0},{name:"type",type:"int128",indexed:!1},{name:"ts",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Withdraw",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1},{name:"ts",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Supply",inputs:[{name:"prevSupply",type:"uint256",indexed:!1},{name:"supply",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{stateMutability:"nonpayable",type:"constructor",inputs:[{name:"token_addr",type:"address"},{name:"_name",type:"string"},{name:"_symbol",type:"string"},{name:"_version",type:"string"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"commit_transfer_ownership",inputs:[{name:"addr",type:"address"}],outputs:[],gas:39445},{stateMutability:"nonpayable",type:"function",name:"apply_transfer_ownership",inputs:[],outputs:[],gas:41536},{stateMutability:"nonpayable",type:"function",name:"commit_smart_wallet_checker",inputs:[{name:"addr",type:"address"}],outputs:[],gas:37665},{stateMutability:"nonpayable",type:"function",name:"apply_smart_wallet_checker",inputs:[],outputs:[],gas:39641},{stateMutability:"view",type:"function",name:"get_last_user_slope",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"int128"}],gas:5124},{stateMutability:"view",type:"function",name:"user_point_history__ts",inputs:[{name:"_addr",type:"address"},{name:"_idx",type:"uint256"}],outputs:[{name:"",type:"uint256"}],gas:2927},{stateMutability:"view",type:"function",name:"locked__end",inputs:[{name:"_addr",type:"address"}],outputs:[{name:"",type:"uint256"}],gas:2912},{stateMutability:"nonpayable",type:"function",name:"checkpoint",inputs:[],outputs:[],gas:37283250},{stateMutability:"nonpayable",type:"function",name:"deposit_for",inputs:[{name:"_addr",type:"address"},{name:"_value",type:"uint256"}],outputs:[],gas:37475758},{stateMutability:"nonpayable",type:"function",name:"create_lock",inputs:[{name:"_value",type:"uint256"},{name:"_unlock_time",type:"uint256"}],outputs:[],gas:37483576},{stateMutability:"nonpayable",type:"function",name:"increase_amount",inputs:[{name:"_value",type:"uint256"}],outputs:[],gas:37479799},{stateMutability:"nonpayable",type:"function",name:"increase_unlock_time",inputs:[{name:"_unlock_time",type:"uint256"}],outputs:[],gas:37486953},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[],outputs:[],gas:37465773},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"uint256"}],gas:12660},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"addr",type:"address"},{name:"_t",type:"uint256"}],outputs:[{name:"",type:"uint256"}],gas:12660},{stateMutability:"view",type:"function",name:"balanceOfAt",inputs:[{name:"addr",type:"address"},{name:"_block",type:"uint256"}],outputs:[{name:"",type:"uint256"}],gas:792910},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[],outputs:[{name:"",type:"uint256"}],gas:905026},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[{name:"t",type:"uint256"}],outputs:[{name:"",type:"uint256"}],gas:905026},{stateMutability:"view",type:"function",name:"totalSupplyAt",inputs:[{name:"_block",type:"uint256"}],outputs:[{name:"",type:"uint256"}],gas:1287488},{stateMutability:"view",type:"function",name:"token",inputs:[],outputs:[{name:"",type:"address"}],gas:2970},{stateMutability:"view",type:"function",name:"supply",inputs:[],outputs:[{name:"",type:"uint256"}],gas:3e3},{stateMutability:"view",type:"function",name:"locked",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"tuple",components:[{name:"amount",type:"int128"},{name:"end",type:"uint256"}]}],gas:5453},{stateMutability:"view",type:"function",name:"epoch",inputs:[],outputs:[{name:"",type:"uint256"}],gas:3060},{stateMutability:"view",type:"function",name:"point_history",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"tuple",components:[{name:"bias",type:"int128"},{name:"slope",type:"int128"},{name:"ts",type:"uint256"},{name:"blk",type:"uint256"}]}],gas:9524},{stateMutability:"view",type:"function",name:"user_point_history",inputs:[{name:"arg0",type:"address"},{name:"arg1",type:"uint256"}],outputs:[{name:"",type:"tuple",components:[{name:"bias",type:"int128"},{name:"slope",type:"int128"},{name:"ts",type:"uint256"},{name:"blk",type:"uint256"}]}],gas:9820},{stateMutability:"view",type:"function",name:"user_point_epoch",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}],gas:3416},{stateMutability:"view",type:"function",name:"slope_changes",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"int128"}],gas:3295},{stateMutability:"view",type:"function",name:"name",inputs:[],outputs:[{name:"",type:"string"}],gas:13499},{stateMutability:"view",type:"function",name:"symbol",inputs:[],outputs:[{name:"",type:"string"}],gas:11258},{stateMutability:"view",type:"function",name:"version",inputs:[],outputs:[{name:"",type:"string"}],gas:11288},{stateMutability:"view",type:"function",name:"decimals",inputs:[],outputs:[{name:"",type:"uint256"}],gas:3300},{stateMutability:"view",type:"function",name:"future_smart_wallet_checker",inputs:[],outputs:[{name:"",type:"address"}],gas:3330},{stateMutability:"view",type:"function",name:"smart_wallet_checker",inputs:[],outputs:[{name:"",type:"address"}],gas:3360},{stateMutability:"view",type:"function",name:"admin",inputs:[],outputs:[{name:"",type:"address"}],gas:3390},{stateMutability:"view",type:"function",name:"future_admin",inputs:[],outputs:[{name:"",type:"address"}],gas:3420}];class Ie{constructor(e){b(this,"service");this.service=e}parseDate(e){return(Y(new Date(e))/1e3).toString()}async getLockInfo(e){const t=_(),n=new t(this.service.config.key,this.service.provider,T);n.call("locked",this.address,"locked",[e]),n.call("epoch",this.address,"epoch"),n.call("totalSupply",this.address,"totalSupply()");const s=await n.execute();return this.formatLockInfo(s)}formatLockInfo(e){const[t,n]=e.locked,s=t.gt(0),a=Z(n.toNumber()),i=s&&Date.now()>a;return{lockedEndDate:a,lockedAmount:d(t,18),totalSupply:d(e.totalSupply,18),epoch:e.epoch.toString(),hasExistingLock:s,isExpired:i}}async createLock(e,t,n){return await new h(e.getSigner()).contract.sendTransaction({contractAddress:this.address,abi:T,action:"create_lock",params:[E(t,18),this.parseDate(n)]})}async increaseLock(e,t){return await new h(e.getSigner()).contract.sendTransaction({contractAddress:this.address,abi:T,action:"increase_amount",params:[E(t,18)]})}async extendLock(e,t){return await new h(e.getSigner()).contract.sendTransaction({contractAddress:this.address,abi:T,action:"increase_unlock_time",params:[this.parseDate(t)]})}async unlock(e){return await new h(e.getSigner()).contract.sendTransaction({contractAddress:this.address,abi:T,action:"withdraw"})}get address(){return this.service.config.addresses.veBAL}}class z{constructor(e=v,t=P,n=de){b(this,"vault");b(this,"config");b(this,"provider");b(this,"veBAL");this.configService=e,this.rpcProviderService=t,this.sdk=n,this.provider=this.rpcProviderService.jsonProvider,this.config=this.configService.network,this.vault=new ke(this),this.veBAL=new Ie(this)}get allPoolABIs(){return Object.values(Object.fromEntries([...S.WeightedPool__factory.abi,...S.StablePool__factory.abi,...S.InvestmentPool__factory.abi,...me,...be,...fe,...X,...ge].map(e=>[e.name,e])))}}const xe=new z,L=[{name:"Deposit",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Withdraw",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateLiquidityLimit",inputs:[{name:"user",type:"address",indexed:!0},{name:"original_balance",type:"uint256",indexed:!1},{name:"original_supply",type:"uint256",indexed:!1},{name:"working_balance",type:"uint256",indexed:!1},{name:"working_supply",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Transfer",inputs:[{name:"_from",type:"address",indexed:!0},{name:"_to",type:"address",indexed:!0},{name:"_value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Approval",inputs:[{name:"_owner",type:"address",indexed:!0},{name:"_spender",type:"address",indexed:!0},{name:"_value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{stateMutability:"nonpayable",type:"constructor",inputs:[{name:"minter",type:"address"},{name:"veBoostProxy",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"},{name:"_addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"},{name:"_addr",type:"address"},{name:"_claim_rewards",type:"bool"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"_value",type:"uint256"},{name:"_claim_rewards",type:"bool"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[{name:"_addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[{name:"_addr",type:"address"},{name:"_receiver",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"transferFrom",inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"transfer",inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"approve",inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"permit",inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"},{name:"_value",type:"uint256"},{name:"_deadline",type:"uint256"},{name:"_v",type:"uint8"},{name:"_r",type:"bytes32"},{name:"_s",type:"bytes32"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"increaseAllowance",inputs:[{name:"_spender",type:"address"},{name:"_added_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"decreaseAllowance",inputs:[{name:"_spender",type:"address"},{name:"_subtracted_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"user_checkpoint",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"set_rewards_receiver",inputs:[{name:"_receiver",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"kick",inputs:[{name:"addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit_reward_token",inputs:[{name:"_reward_token",type:"address"},{name:"_amount",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"add_reward",inputs:[{name:"_reward_token",type:"address"},{name:"_distributor",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"set_reward_distributor",inputs:[{name:"_reward_token",type:"address"},{name:"_distributor",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"set_killed",inputs:[{name:"_is_killed",type:"bool"}],outputs:[]},{stateMutability:"view",type:"function",name:"claimed_reward",inputs:[{name:"_addr",type:"address"},{name:"_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_reward",inputs:[{name:"_user",type:"address"},{name:"_reward_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_reward_write",inputs:[{name:"_addr",type:"address"},{name:"_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_tokens",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_checkpoint",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"future_epoch_time",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"inflation_rate",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"decimals",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"version",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"allowance",inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"initialize",inputs:[{name:"_lp_token",type:"address"}],outputs:[]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"name",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"symbol",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"DOMAIN_SEPARATOR",inputs:[],outputs:[{name:"",type:"bytes32"}]},{stateMutability:"view",type:"function",name:"nonces",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"factory",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"lp_token",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"is_killed",inputs:[],outputs:[{name:"",type:"bool"}]},{stateMutability:"view",type:"function",name:"reward_count",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"reward_data",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"tuple",components:[{name:"token",type:"address"},{name:"distributor",type:"address"},{name:"period_finish",type:"uint256"},{name:"rate",type:"uint256"},{name:"last_update",type:"uint256"},{name:"integral",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"rewards_receiver",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"reward_integral_for",inputs:[{name:"arg0",type:"address"},{name:"arg1",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"working_balances",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"working_supply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_inv_supply_of",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_checkpoint_of",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_fraction",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"period",inputs:[],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"reward_tokens",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"period_timestamp",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_inv_supply",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"uint256"}]}],V=8;class B{constructor(e,t=P.jsonProvider,n=L,s=v,a=j){b(this,"instance");this.address=e,this.provider=t,this.abi=n,this.config=s,this.walletService=a;const i=D();this.instance=new i(this.address,this.abi,this.provider)}async stake(e){return await this.walletService.txBuilder.contract.sendTransaction({contractAddress:this.address,abi:this.abi,action:"deposit(uint256)",params:[e]})}async unstake(e){return await this.walletService.txBuilder.contract.sendTransaction({contractAddress:this.address,abi:this.abi,action:"withdraw(uint256)",params:[e]})}async balance(e){return this.instance.balanceOf(m(e))}async totalSupply(){const e=await this.instance.totalSupply();return d(e,18)}async claimRewards(){return await this.walletService.txBuilder.contract.sendTransaction({contractAddress:this.address,abi:this.abi,action:"claim_rewards()"})}async checkpointUser(e){const{userAddress:t,signer:n}=e;return await new h(n).contract.sendTransaction({contractAddress:this.address,abi:this.abi,action:"user_checkpoint",params:[t]})}async workingSupplies(e){const t=this.getMulticaller();for(const a of e)t.call(a,this.address,"working_supply");const n=await t.execute();return M.mapValues(n,a=>d(a,18))}async rewardData(e){return this.instance.reward_data(m(e))}async getRewardTokens(){const e=this.getMulticaller();for(let n=0;n<V;n++)e.call(this.address,this.address,"reward_tokens",[n]);return await e.execute()}static async getRewardTokensForGauges(e){const t=B.getMulticaller();e.forEach(s=>{for(let a=0;a<V;a++)t.call(`${m(s)}.[${a}]`,m(s),"reward_tokens",[a])});const n=await t.execute();return M.mapValues(n,s=>s.filter(a=>a!==ee))}static async getRewardTokenDataForGauges(e){const t=this.getMulticaller();for(const s of Object.keys(e)){const a=m(s);for(const i of e[s]){const o=m(i);t.call(`${a}.${o}`,a,"reward_data",[o])}}return await t.execute()}getMulticaller(){const e=_();return new e(this.config.network.key,this.provider,this.abi)}static getMulticaller(e){const t=_();return new t(v.network.key,e||P.jsonProvider,L)}}const Se=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"votingEscrow",type:"address"},{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newImplementation",type:"address"}],name:"DelegationImplementationUpdated",type:"event"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjustedBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjusted_balance_of",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDelegationImplementation",outputs:[{internalType:"contract IVeDelegation",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVotingEscrow",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"killDelegation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],name:"setDelegation",outputs:[],stateMutability:"nonpayable",type:"function"}],Pe=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"votingEscrow",type:"address"},{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newImplementation",type:"address"}],name:"DelegationImplementationUpdated",type:"event"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjustedBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjusted_balance_of",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDelegationImplementation",outputs:[{internalType:"contract IVeDelegation",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVotingEscrow",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"killDelegation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],name:"setDelegation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}];class Ae{constructor(e,t=P.jsonProvider,n=U.value===W.MAINNET?Se:Pe,s=v,a=j){b(this,"instance");this.address=e,this.provider=t,this.abi=n,this.config=s,this.walletService=a;const i=D();this.instance=new i(this.address,this.abi,this.provider)}async getAdjustedBalance(e){const t=await this.instance.adjustedBalanceOf(m(e));return d(t,18)}async getVeBalTotalSupplyL2(){const e=await this.instance.totalSupply();return d(e,18)}async getAdjustedBalances(e){const t=this.getMulticaller();for(const s of e)t.call(s,this.address,"adjustedBalanceOf",[m(s)]);const n=await t.execute();return M.mapValues(n,s=>d(s||"0",18))}getMulticaller(){const e=_();return new e(this.config.network.key,this.provider,this.abi)}}class Be{async getWorkingSupplyForGauges(e){const t=B.getMulticaller();for(const a of e)t.call(m(a),m(a),"working_supply");const n=await t.execute();return M.mapValues(n,a=>d(a,18))}async getBoostDeps(e){const t=new Ae(v.network.addresses.veDelegationProxy);let n="0";U.value===W.MAINNET?n=(await new z().veBAL.getLockInfo(e)).totalSupply:n=await t.getVeBalTotalSupplyL2();const s=await t.getAdjustedBalance(e);return{veBALTotalSupply:n,userVeBALBalance:s}}calcUserBoost({userGaugeBalance:e,gaugeTotalSupply:t,userVeBALBalance:n,veBALTotalSupply:s}){const a=g(e),i=g(t),o=g(n),l=g(s),u=g(1).plus(g(1.5).times(o).div(l).times(i).div(a));return(g(2.5).lt(u)?2.5:u).toString()}async getUserBoosts({userAddress:e,gaugeShares:t}){const{veBALTotalSupply:n,userVeBALBalance:s}=await this.getBoostDeps(e),a=t.map(i=>{const o=this.calcUserBoost({userGaugeBalance:i.balance,gaugeTotalSupply:i.gauge.totalSupply,userVeBALBalance:s,veBALTotalSupply:n});return[i.gauge.poolId,o]});return Object.fromEntries(a)}}const Ee=new Be;function Re(p,e={}){const{account:t,isWalletReady:n}=k(),s=f(A.User.Boosts(t,p)),a=w(()=>!!p.value&&n.value),i=async()=>{try{return!p.value||p.value.length===0?{}:ie.value?await Ee.getUserBoosts({userAddress:t.value,gaugeShares:p.value}):{}}catch(l){throw q("Failed to fetch user boost values",l),l}},o=f({enabled:a,refetchOnWindowFocus:!1,...e});return I(s,i,o)}async function Ce({url:p,query:e,options:t={}}){const n=await fetch(p,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...t==null?void 0:t.headers},body:JSON.stringify({query:ce.jsonToGraphQLQuery({query:e})})}),{data:s}=await n.json();return s}function Fe(p,e={}){const{account:t,isWalletReady:n}=k(),s=f(A.User.Gauges(t,p)),a=w(()=>!!v.network.subgraphs.gauge&&n.value),i=w(()=>p!=null&&p.value?{where:{user:t.value.toLowerCase(),balance_gt:"0",gauge_:{pool:p.value.toLowerCase()}}}:{where:{user:t.value.toLowerCase(),balance_gt:"0"}}),o=w(()=>({__name:"GaugeShares",gaugeShares:{__args:i.value,balance:!0,gauge:{id:!0,poolId:!0,totalSupply:!0}}})),l=async()=>{try{const{gaugeShares:r}=await Ce({url:v.network.subgraphs.gauge,query:o.value});return r}catch(r){throw console.error("Failed to fetch pool gauges user",{cause:r}),r}},u=f({enabled:a,refetchOnWindowFocus:!1,...e});return I(s,l,u)}function Le(p={}){const{account:e,isWalletReady:t}=k(),n=f(A.User.Pools(e)),s=w(()=>t.value),a=async()=>{try{return(await we.poolShares.get({where:{userAddress:e.value.toLowerCase()}})).reduce((l,u)=>({...l,[u.poolId.id]:u.balance}),{})}catch(o){throw console.error("Failed users pool shares",{cause:o}),o}},i=f({enabled:s,refetchOnWindowFocus:!1,...p});return I(n,a,i)}function Ve(p={}){const{account:e,isWalletReady:t}=k(),{networkId:n}=pe(),s=w(()=>t.value&&ve.value),a=()=>xe.veBAL.getLockInfo(e.value),i=f({enabled:s,...p});return I(f(["tokens","veBAL",{networkId:n,account:e}]),a,i)}const Oe=()=>{const p=Le(),e=Fe(),{data:t}=e,n=Te(t),s=Re(t),a=Ve();return{userPoolSharesQuery:p,userGaugeSharesQuery:e,stakedSharesQuery:n,userBoostsQuery:s,lockQuery:a}},N=Symbol(ne.Providers.UserData);function $e(){ue(N,Oe())}function Qe(){return te(N)}export{B as L,Qe as a,xe as b,$e as p,Ce as s,Ve as u};
//# sourceMappingURL=user-data.provider-5f113b17.js.map
